"""initial_migration

Revision ID: 8070eef25a91
Revises: 
Create Date: 2025-01-16 12:39:13.196827

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision = '8070eef25a91'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('currencies',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('symbol', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('full_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('verified', sa.Boolean(), nullable=False),
    sa.Column('hashed_password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('markets',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('symbol', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('price', sa.Numeric(precision=16, scale=6), nullable=False),
    sa.Column('base_currency_id', sa.Integer(), nullable=False),
    sa.Column('qoute_currency_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['base_currency_id'], ['currencies.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['qoute_currency_id'], ['currencies.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('wallets',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('balance', sa.Numeric(precision=16, scale=6), nullable=False),
    sa.Column('locked', sa.Numeric(precision=16, scale=6), nullable=False),
    sa.Column('reserved', sa.Numeric(precision=16, scale=6), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('currency_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['currency_id'], ['currencies.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('purchases',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'FAILED', 'DONE', name='purchasestatus'), nullable=True),
    sa.Column('amount', sa.Numeric(precision=16, scale=6), nullable=False),
    sa.Column('price', sa.Numeric(precision=16, scale=6), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('market_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['market_id'], ['markets.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('settlements',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('transaction_code', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=16, scale=6), nullable=False),
    sa.Column('market_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['market_id'], ['markets.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transactions',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=16, scale=6), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'FAILED', 'DONE', name='transactionstatus'), nullable=True),
    sa.Column('type', sa.Enum('CREDIT', 'DEBT', name='transactiontype'), nullable=True),
    sa.Column('wallet_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['wallet_id'], ['wallets.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('transactions')
    op.drop_table('settlements')
    op.drop_table('purchases')
    op.drop_table('wallets')
    op.drop_table('markets')
    op.drop_table('users')
    op.drop_table('currencies')
    # ### end Alembic commands ###
